---
# Source: portainer/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: portainer-sa-clusteradmin
  namespace: portainer
  labels:
    app.kubernetes.io/name: portainer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: portainer-config-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  storageClassName: longhorn
  csi:
    driver: driver.longhorn.io
    volumeHandle: portainer-config   
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: portainer-config-pvc
  namespace: portainer
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: longhorn     
---
# Source: portainer/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: portainer
  labels:
    app.kubernetes.io/name: portainer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  namespace: portainer
  name: portainer-sa-clusteradmin
---
# Source: portainer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: portainer
  namespace: portainer
  labels:
    io.portainer.kubernetes.application.stack: portainer
    app.kubernetes.io/name: portainer
spec:
  type: ClusterIP
  ports:
    - port: 9443
      targetPort: 9443
      protocol: TCP
      name: https
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: edge
  selector:
    app.kubernetes.io/name: portainer
---
# Source: portainer/templates/deployment.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: portainer
  namespace: portainer
  labels:
    io.portainer.kubernetes.application.stack: portainer
    app.kubernetes.io/name: portainer
spec:
  serviceName: portainer
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: portainer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: portainer
    spec:
      serviceAccountName: portainer-sa-clusteradmin
      volumes:
        - name: "data"
          persistentVolumeClaim:
            claimName: portainer-config-pvc
      containers:
        - name: portainer
          image: "portainer/portainer-ee@sha256:adf08841af37323e2424616b4955f1cbec922a28e3ccd20cfc09ea5a15d68c43"
          imagePullPolicy: IfNotPresent
          args:
          - --http-disabled
          volumeMounts:
            - name: data
              mountPath: /data
          ports:
            - name: https
              containerPort: 9443
              protocol: TCP
            - name: tcp-edge
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 9443
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /
              port: 9443
              scheme: HTTPS
          resources:
            {}
---
# Source: portainer/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "portainer-test-connection"
  namespace: portainer  
  labels:
    app.kubernetes.io/name: portainer
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['portainer:9000']
  restartPolicy: Never
